import Redux from 'redux';

declare module 'react-router-redux' {
  declare var CALL_HISTORY_METHOD: string;
  declare var LOCATION_CHANGE: string;

  declare type LocationDescriptor = Object;
  declare type PushAction = (nextLocation: LocationDescriptor) => RouterAction;
  declare type ReplaceAction = (nextLocation: LocationDescriptor) => RouterAction;
  declare type GoAction = (n: number) => RouterAction;
  declare type GoForwardAction = () => RouterAction;
  declare type GoBackAction = () => RouterAction;
  declare type RouterAction = {
    type: string;
    payload?: any;
  }

  declare var push: PushAction;
  declare var replace: ReplaceAction;
  declare var go: GoAction;
  declare var goBack: GoForwardAction;
  declare var goForward: GoBackAction;
  declare var routerActions: RouterAction[];

  declare interface RouteActions {
    push: PushAction;
    replace: ReplaceAction;
    go: GoAction;
    goForward: GoForwardAction;
    goBack: GoBackAction;
  }
  declare interface ReactRouterReduxHistory {
    unsubscribe(): void;
  }

  declare interface DefaultSelectLocationState extends Function {
    (state: any): any;
  }

  declare interface SyncHistoryWithStoreOptions {
    selectLocationState?: DefaultSelectLocationState;
    adjustUrlOnReplay?: boolean;
  }

  declare function routerReducer(state?: any, options?: any): Redux.Reducer;
  declare function syncHistoryWithStore(history: Object, store: Redux.Store, options?: SyncHistoryWithStoreOptions): ReactRouterReduxHistory;
  declare function routerMiddleware(history: Object): Redux.Middleware;
}
